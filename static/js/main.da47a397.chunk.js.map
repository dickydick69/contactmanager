{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","App","context_Provider","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da47a397.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? contact = action.payload : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({ contacts: res.data })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../context'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    }\r\n\r\n    onShowClick = e => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        })\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            dispatch({\r\n                type: 'DELETE_CONTACT',\r\n                payload: id\r\n            })\r\n        } catch (e) {\r\n            dispatch({\r\n                type: 'DELETE_CONTACT',\r\n                payload: id\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, id } = this.props.contact\r\n        const { showContactInfo } = this.state\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}></i>\r\n                                <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                                <Link to={`contact/edit/${id}`}><i className=\"fas fa-pencil-alt\" style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem' }}></i></Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ) : ''}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context'\r\n\r\nexport default class Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact List</span>\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nexport default function TextInputGroup({ label, name, value, placeholder, type, onChange, error }) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type}\r\n                className={classnames('form-control form-control-lg', { 'is-invalid': error })}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport uuid from 'uuid'\r\nimport axios from 'axios'\r\n\r\nexport default class AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault()\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is Required' } })\r\n            return\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'email is Required' } })\r\n            return\r\n        }\r\n\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is Required' } })\r\n            return\r\n        }\r\n\r\n        const newContact = {\r\n            name, email, phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n            this.setState({\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                errors: {}\r\n            })\r\n        \r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email Address\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport uuid from 'uuid'\r\nimport axios from 'axios'\r\n\r\nexport default class EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault()\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is Required' } })\r\n            return\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'email is Required' } })\r\n            return\r\n        }\r\n\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is Required' } })\r\n            return\r\n        }\r\n        const updContact = {\r\n            name, email, phone\r\n        }\r\n\r\n        const { id } = this.props.match.params\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        const contact = res.data\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Edit Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email Address\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        errors={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Header(props) {\r\n    const { branding } = props\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add Contact</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about/:id\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'MyApp'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Bla bla bla</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4 text-danger\">404 Page Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport Header from './components/layout/Header'\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}